{"ast":null,"code":"var _jsxFileName = \"/home/harshit/Desktop/Projects/tic-tac-toe/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares;\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat({\n        squares: squares\n      }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpToMove(step, move) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0 ? 'X' : 'O'\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares); // Stores all the list of moves\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to #' + move : 'Start the Game!';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpToMove(step, move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner is ' + winner;\n    } else {\n      status = 'Next Player is ' + xIsNext ? 'X' : 'O';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          onClick: i => this.handleClick(i),\n          squares: current.squares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] == squares[b] && squares[b] == squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/harshit/Desktop/Projects/tic-tac-toe/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","xIsNext","stepNumber","history","squares","Array","fill","handleClick","i","slice","current","length","winner","calculateWinner","setState","concat","jumpToMove","step","move","render","moves","map","desc","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Board from './Board';\n\nexport default class Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            xIsNext: true,\n            stepNumber: 0,\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ]\n        }\n    }\n\n    handleClick(i) {\n\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares;\n\n        const winner = calculateWinner(squares);\n\n        if(winner || squares[i]) {\n            return ;\n        }\n\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n        this.setState({\n            history: history.concat({\n                squares: squares,\n            }),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        });\n\n    }\n\n    jumpToMove(step, move) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step%2 === 0 ? 'X' : 'O'),\n        })\n    }\n\n    render() {\n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        // Stores all the list of moves\n        const moves = history.map((step, move) => {\n\n            const desc = move ? 'Go to #' + move : 'Start the Game!';\n            return (\n                <li key = {move}>\n                    <button onClick = {() => jumpToMove(step, move)}>\n                        {desc}\n                    </button>\n                </li>\n            )\n\n        });\n\n        let status;\n        if(winner) {\n            status = 'Winner is ' + winner;\n        } else {\n            status = 'Next Player is ' + xIsNext ? 'X' : 'O';\n        }\n\n        \n\n        return (\n            <div className = \"game\">\n                <div className = \"board\">\n                    <Board onClick = {(i) => this.handleClick(i)}\n                           squares = {current.squares} />\n                </div>\n                <div className = \"game-info\">\n                    <div>{status}</div>\n                    <div>{moves}</div>\n                </div>\n            </div>\n        )\n    }\n};\n\nfunction calculateWinner(squares) {\n\n    const lines = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\n        [0, 4, 8], [2, 4, 6]\n    ];\n\n    for(let i = 0; i < lines.length; i++) {\n\n        const [a, b, c] = lines[i];\n        if(squares[a] && squares[a] == squares[b] && squares[b] == squares[c]) {\n            return squares[a];\n        }       \n\n    }\n\n    return null;\n}"]},"metadata":{},"sourceType":"module"}